getwd()
install.packages(("CITAN"))
library(CITAN)
lbsCreate()
lbsCreate("Scopus-biblio.db")
conn <- lbsConnect("Scopus-biblio.db")
lbsCreate(conn)
Scopus_ImportSources(conn)
Scopus_ImportSources
dbBeginTransaction
dbBegin
#Load necessary packages
library(ggplot2)
#Create function to roll die
rollSkew <- function() {
die <- 1:6
dice <- sample(die, size = 2, replace = TRUE, prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8))
sum(dice)
}
rollFair <- function() {
die <- 1:6
dice <- sample(die, size = 2, replace = T)
sum(dice)
}
qplot(replicate(10000, rollSkew()), binwidth = 1)
qplot(replicate(10000, rollFair()), binwidth = 1)
data <- read.csv("~/Desktop/data.csv", sep=";", comment.char="#")
View(data)
table(data$country)
hist(table(data$country))
table(prop.table((data$country)))
prop.table(table(data$country))
prop.table(table(data$country)*100)
round(prop.table(table(data$country))*100)
round(prop.table(table(data$country))*100, digits = 3)
hist(round(prop.table(table(data$country))*100, digits = 3))
barplot(round(prop.table(table(data$country))*100, digits = 3))
barplot(round(prop.table(table(data$country))*100, digits = 3), las = 3)
barplot(table(data$country)), las = 3)
barplot(table(data$country))las = 3)
barplot(table(data$country))
barplot(table(data$country), las = 3)
barplot(table(data$city), las = 3)
table(data$country[sum(data$country > 50)])
table(data$country[sum(data$country => 50)])
table(data$country[sum(data$country >= 50)])
table(data$country)
table(data$city)
table(as.numeric(data$city))
num <- as.numeric(data$city)
num
rm(num)
num <- table(as.numeric(data$city))
num
cbind(data$city, num)
View(num)
View(table(data$city))
View(table(data$city[Freq]))
View(table(data$city[frequency()]))
barplot(table(data$country))
barplot(table(data$country), las = 3)
barplot(table(data$country[-"Sweden"]), las = 3)
barplot(table(data$country[-Sweden]), las = 3)
barplot(table(data$country[-data$country == "Sweden"]), las = 3)
barplot(table(data$country[-country == "Sweden"]), las = 3)
barplot(table(data$country[-country == Sweden]), las = 3)
barplot(table(data$country[-data$country == Sweden]), las = 3)
barplot(table(data$country[-as.character(data$country == Sweden)]), las = 3)
barplot(table(data$country[-as.character(data$country == "Sweden")]), las = 3)
barplot(table(data$country), las = 3)
str(data)
library(mapproj)
library(ggmap)
map <- get_map(location = "Europe", zoom = 4)
ggmap(map)
tider <- read.table("~/Desktop/tider.txt", quote="\"", comment.char="")
View(tider)
names(tider)
colnames(tider) <- "Tid"
names(tider)
plot(Tid)
plot(tider$Tid)
colnames(tider) <- "klockslag"
plot(tider$klockslag, pch = 16)
plot(tider$klockslag, pch = 16, lty = "b")
plot(tider$klockslag, pch = 16, type = "b")
plot(tider$klockslag, pch = 16, type = "o")
plot(tider$klockslag, pch = 16, type = "o", las = 1)
tider <- read.csv("~/Desktop/tider.csv", header=FALSE, sep=";")
View(tider)
colnames(tider) <- c("start", "slut")
View(tider)
plot(tider$start, pch = 16, col = "red", type = "o")
points(tider$slut, pch = 16 ,col = "green", type = "o")
plot(tider$start, pch = 16, col = "red", type = "o", ylim = c(7, 18))
points(tider$slut, pch = 16 ,col = "green", type = "o")
points(tider$slut - tider$start, pch = 16 ,col = "blue", type = "o")
tider <- read.csv("~/Desktop/tider.csv", sep=";")
View(tider)
plot(tider$rast~tider$start, pch = 16, type = "o")
plot(tider$rast, pch = 16, type = "o")
plot(tider$start, pch = 16, type = "o")
hist(tider$rast)
plot(tider$start, pch = 16, type = "o", ylim = c(9, 18))
plot(tider$start, pch = 16, type = "o", ylim = c(7, 18))
plot(tider$start, pch = 16, type = "o", ylim = c(6, 18))
plot(tider$start, pch = 16, type = "o", col = "blue", ylim = c(6, 18))
points(tider$slut, pch = 16, type = "o", col = "red")
plot(tider$slut ~ tider$start)
plot(tider$slut ~ tider$start, type = "o")
plot(tider$slut ~ tider$start)
plot(tider$slut ~ tider$start, las = 1)
plot(tider$start, pch = 16, type = "o", col = "blue", ylim = c(6, 18))
points(tider$slut, pch = 16, type = "o", col = "red")
plot(tider$start, pch = 16, type = "o", col = "blue", ylim = c(6, 18), las = 1)
points(tider$slut, pch = 16, type = "o", col = "red")
plot(tider$start, pch = 15, type = "o", col = "blue", ylim = c(6, 18), las = 1)
plot(tider$start, pch = 13, type = "o", col = "blue", ylim = c(6, 18), las = 1)
library(mapproj)
library(ggmap)
map <- get_map(location = "Europe", zoom = 4)
ggmap(map)
newMap <- getMap(resolution = "low")
plot(map, xlim = c(-20, 59), ylim = c(35, 71), asp = 1)
points(airports$lon, airports$lat, col = "red", cex = .6)
map <- get_map(location = "Europe", zoom = 4)
ggmap(map)
points(airports$lon, airports$lat, col = "red", cex = .6)
airports <- read.csv("~/Desktop/airports.dat", header=FALSE)
View(airports)
points(airports$V7, airports$V8, col = "red", cex = .6)
library(mapproj)
library(ggmap)
library(ggplot2)
library(maptools)
#Set working directory
setwd("/Users/kristoka/Documents/Programmering/R")
#Load data and add column names
data <- read.csv("countries.txt", stringsAsFactors = FALSE)
#Create variable for the area to cover
mapFocus <- "Europe"
#Create location variable
setwd("/Users/kristoka/Documents/Programmering/R/WorldMap")
data <- read.delim("cities.txt", header = T, stringsAsFactors = FALSE)
#Create coordinates from data
geo_data <- unique(data$city)
geo_data <- geocode(geo_data)
map("world", fill = TRUE, col = "white", bg = "lightblue", ylim = c(-60, 90), mar = c(0, 0, 0, 0))
#Plot cities on map
points(geo_data$lon, geo_data$lat, col = "red", pch = 16, cex = .5)
